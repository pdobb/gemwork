Layout/ClassStructure:
  Enabled: false # Consider implementing on a per-project basis.

Layout/DotPosition:
  EnforcedStyle: leading

Layout/EmptyLineAfterGuardClause:
  Enabled: true

Layout/EmptyLineAfterMultilineCondition:
  Enabled: false

Layout/EndOfLine:
  EnforcedStyle: lf

Layout/FirstArgumentIndentation:
  EnforcedStyle: consistent_relative_to_receiver

Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

Layout/FirstArrayElementLineBreak:
  Enabled: true

Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

Layout/FirstHashElementLineBreak:
  Enabled: true

Layout/FirstMethodArgumentLineBreak:
  Enabled: true
  AllowMultilineFinalElement: true

Layout/FirstMethodParameterLineBreak:
  Enabled: true

Layout/FirstParameterIndentation:
  # The first parameter should always be indented one step more than the
  # preceding line. e.g.
  #   def my_method(
  #     my_arg1 # <- ðŸ‘€EnforcedStyleForMultiline
  #   )
  Enabled: true

Layout/HeredocArgumentClosingParenthesis:
  Enabled: true

Layout/LineContinuationSpacing:
  EnforcedStyle: no_space

Layout/LineEndStringConcatenationIndentation:
  EnforcedStyle: aligned

Layout/LineLength:
  Max: 80
  Exclude:
    - "*.gemspec"
  AllowedPatterns:
    # Deeply namespaced classes
    - !ruby/regexp /\A *# [a-zA-z:]+\z/
    # YARD doc `@example` output.
    - !ruby/regexp /\A *#   \# => /
    - !ruby/regexp /\A *#   =/

Layout/MultilineAssignmentLayout:
  Enabled: true
  SupportedTypes:
    - block
    - case
    - class
    - if
    # - kwbegin
    - module

Layout/MultilineArrayLineBreaks:
  Enabled: true

Layout/MultilineHashKeyLineBreaks:
  Enabled: true

Layout/MultilineMethodArgumentLineBreaks:
  Enabled: false

Layout/MultilineMethodCallBraceLayout:
  EnforcedStyle: symmetrical

Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented_relative_to_receiver

Layout/MultilineMethodDefinitionBraceLayout:
  # The closing brace of a multi-line method definition must be on the line
  # after the last parameter of the definition. e.g.
  #   def my_method(
  #     my_arg1,
  #     my_arg2,
  #   ) # <- ðŸ‘€
  EnforcedStyle: new_line

Layout/MultilineMethodParameterLineBreaks:
  Enabled: false

Layout/MultilineOperationIndentation:
  Enabled: false # Waiting for e.g. `indented_relative_to_receiver`.

Layout/RedundantLineBreak:
  Enabled: false

Layout/SingleLineBlockChain:
  Enabled: false
